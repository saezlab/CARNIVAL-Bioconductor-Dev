% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runCARNIVAL.R
\name{runCARNIVAL}
\alias{runCARNIVAL}
\title{\code{runCARNIVAL}}
\usage{
runCARNIVAL(inputObj=NULL, measObj=measObj, netObj=netObj, weightObj=NULL,
            solverPath=NULL, solver="lpSolve", DOTfig=FALSE, timelimit=3600,
            mipGAP=0.05, poolrelGAP=0.0001, limitPop=500, poolCap=100,
            poolIntensity=4, poolReplace=2, alphaWeight=1, betaWeight=0.2,
            dir_name=paste0(getwd(), "/DOTfigures"))
}
\arguments{

\item{inputObj}{Data frame of the list for target of perturbation - optional 
                or default set to NULL to run invCARNIVAL when inputs are not 
                known}

\item{measObj}{Data frame of the measurement file (i.e. DoRothEA normalised 
               enrichment scores) - always required}
               
\item{netObj}{Data frame of the prior knowledge network - always required}

\item{weightObj}{Data frame of the additional weight (i.e. PROGENy pathway 
                 score or measured protein activities) - optional or default set 
                 as NULL to run CARNIVAL without weights}
                 
\item{solverPath}{Path to executable cbc/cplex file - default set to NULL, in
                  which case the solver from lpSolve package is used}
                 
\item{solver}{Solver to use: lpSolve/cplex/cbc (Default set to lpSolve)}

\item{DOTfig}{For plotting: define if DOT figure will be exported in the result 
              folder (logical T/F). Default set to TRUE. If this the case, the
              plotted DOT figures will be saved in the defined dir_name 
              directory}

\item{timelimit}{CPLEX/Cbc parameter: Time limit of CPLEX optimisation (in 
                 seconds)}

\item{mipGAP}{CPLEX parameter: the absolute tolerance on the gap between the 
              best integer objective and the objective of the best node 
              remaining. When this difference falls below the value of this 
              parameter, the linear integer optimization is stopped. Default set
              to 0.05}

\item{poolrelGAP}{CPLEX/Cbc parameter: Allowed relative gap of accepted solution 
      comparing within the pool of accepted solution (fraction; default: 
      0.0001)}

\item{limitPop}{CPLEX parameter: Allowed number of solutions to be generated 
                (default: 500)}

\item{poolCap}{CPLEX parameter: Allowed number of solution to be kept in the 
               pool of solution (default: 100)}

\item{poolIntensity}{CPLEX parameter: Intensity of solution searching (0,1,2,3,4
                     - default: 4)}

\item{poolReplace}{CPLEX parameter: Replacement strategy of solutions in the 
                   pool (0,1,2 - default: 2 = most diversified solutions)}

\item{alphaWeight}{Objective function: weight for mismatch penalty (default: 1 - 
                   will only be applied once measurement file only contains 
                   discrete values)}

\item{betaWeight}{Objective function: weight for node penalty (defaul: 0.2)}

\item{dir_name}{Specify directory name to store results. by default it will
                create a /DOTfigures directory within the current working
                directory}

}
\value{
The networks and predicted node activities from the CARNIVAL pipeline as a 
variable which are also optionally saved in the destined result folder
}
\description{
Run CARNIVAL pipeline using to the user-provided list of inputs or run CARNIVAL 
built-in examples
}
\examples{
## loading toy example 1

load(file = system.file("toy_inputs_ex1.RData",
package="CARNIVAL"))
load(file = system.file("toy_measurements_ex1.RData",
package="CARNIVAL"))
load(file = system.file("toy_network_ex1.RData",
package="CARNIVAL"))

## lpSolve
res1 = runCARNIVAL(inputObj = toy_inputs_ex1, measObj = toy_measurements_ex1, 
                      netObj = toy_network_ex1)

## cbc
res2 = runCARNIVAL(inputObj = toy_inputs_ex1, measObj = toy_measurements_ex1, 
                      netObj = toy_network_ex1, solverPath = solverPath,
                      solver = "cbc")
                      
## cplex
res3 = runCARNIVAL(inputObj = toy_inputs_ex1, measObj = toy_measurements_ex1, 
                      netObj = toy_network_ex1, solverPath = solverPath,
                      solver = "cplex")

}
\author{
Enio Gjerga
}
